package edu.caltech.nanodb.queryeval;


import edu.caltech.nanodb.relations.Schema;
import edu.caltech.nanodb.relations.Tuple;


/**
 * This interface allows us to decouple the implementation of the query
 * evaluation loop from the operations performed on each tuple generated by the
 * evaluator.  Different commands can implement this interface in different ways
 * to perform various operations; for example, the <tt>DELETE</tt> command can
 * provide a processor that deletes each tuple produced by the query evaluation.
 */
public interface TupleProcessor {
    /**
     * This method is called once by the query evaluator before any tuples are
     * passed to the {@link #process} method, so that the tuple-processor knows
     * what the expected tuple-schema will be.
     */
    void setSchema(Schema schema);


    /**
     * Processes a single tuple generated from evaluating a query plan.
     *
     * @param tuple The tuple to process.
     */
    void process(Tuple tuple);


    /**
     * This function is called when all tuples have been produced and passed
     * to the tuple processor.
     */
    void finish();
}
